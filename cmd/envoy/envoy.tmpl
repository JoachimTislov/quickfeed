{{ define "envoy" -}}
admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

layered_runtime:
  layers:
  - name: disable_apple_dns
    static_layer:
      envoy.restart_features.use_apple_api_for_dns_lookups: false

static_resources:
  listeners:
{{- if .TLSEnabled }}
  # Redirects all traffic coming from port 80 to port 443 for SSL
  - name: http_to_https_redirect
    address:
      socket_address: { address: 0.0.0.0, port_value: 80 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          use_remote_address: true
          xff_num_trusted_hops: 0
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
                - "*"
              routes:
              - match: { prefix: "/"}
                redirect:
                  port_redirect: 443
                  https_redirect: true
          http_filters:
          - name: envoy.filters.http.router

  # HTTPS Gateway for the frontend server
  - name: https_server_gateway
    address:
      socket_address: { address: 0.0.0.0, port_value: 443 }
{{- else }}
  # HTTP Gateway for the frontend server
  - name: http_server_gateway
    address:
      socket_address: { address: 0.0.0.0, port_value: 80 }
{{- end }}
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          use_remote_address: true
          xff_num_trusted_hops: 0
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
                - "{{ .Domain }}"
              routes:
              - match: { prefix: "/"}
                route:
                  cluster: web_service
              - match: {prefix: "/auth/callback/github"}
                route: { cluster: web_service }
              cors:
                allow_origin_string_match:
                  - prefix: "*"
                allow_headers: access-control-allow-origin
          http_filters:
          - name: envoy.filters.http.cors
          - name: envoy.filters.http.router
          http_protocol_options: { accept_http_10: true}
{{- if .TLSEnabled }}
      transport_socket:
        name: envoy.transport_socket.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            # Replace certificate with your certificates
            tls_certificates:
              certificate_chain:
                filename: {{ .CertConfig.CertFile }}
              private_key:
                filename: {{ .CertConfig.KeyFile }}
{{- end }}
  clusters:
  - name: web_service
    connect_timeout: 15s
    type: strict_dns
    dns_lookup_family: v4_only
    lb_policy: round_robin
    load_assignment:
      cluster_name: cluster_1
      endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address: { address: {{ .ServerHost }}, port_value: {{ .HTTPPort }} }
{{ end }}
